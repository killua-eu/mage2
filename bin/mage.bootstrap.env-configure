#!/usr/bin/env bash

# ##################
# ### Load stuff ###
# ##################

DIR="${BASH_SOURCE%/*}"
if [[ ! -d "$DIR" ]]; then DIR="$PWD"; fi

[ -f "/etc/mage/mage.conf" ] 	&& source "/etc/mage/mage.conf"
[ -f "$DIR/mage.conf" ] 	&& source "$DIR/../etc/mage.conf"

[[ -z ${SCRIPT} ]] && SCRIPT=`readlink -f $0`
[[ -z ${BINDIR} ]] && BINDIR=`dirname "${SCRIPT}"`
[[ -z ${LIBDIR} ]] && LIBDIR="${BINDIR}/../lib"
[[ -z ${VARDIR} ]] && VARDIR="${BINDIR}/../var"
[[ -z ${ETCDIR} ]] && ETCDIR="${BINDIR}/../etc"

for file in ${LIBDIR}/* ; do
  if [ -f "$file" ] ; then
    . "$file"
  fi
done

# ##################
# ### Do stuff   ###
# ##################

[ -f "/etc/portage/make.conf" ] && source "/etc/portage/make.conf"      # include make.conf
[ -f "${ETCDIR}/bootstrap.conf" ] && source "${ETCDIR}/bootstrap.conf"  # include bootstrap.conf


env_configure() {

  einfo "Setting up Mage ..."
  # Portage repo symlinks
  mkdir -p /var/mage/repos
  ln -s /usr/portage /var/mage/repos/gentoo
  ln -s /usr/local/portage /var/mage/repos/local
  ln -s /var/lib/layman /var/mage/repos/layman
  # Mount point for `mage tmerge`
  mkdir -p /tmp/portage
  edone "Mage setup complete."

  einfo "Updating portage's make.conf defaults"
  echo "MAKEOPTS=\"-j$((`nproc` + 1))\"" >> /etc/portage/make.conf
  echo "PORTAGE_ELOG_CLASSES=\"info log warn error\"" >> /etc/portage/make.conf
  echo "PORTAGE_ELOG_SYSTEM=\"save\"" >> /etc/portage/make.conf
  echo "FEATURES=\"cgroup parallel-install\"" >> /etc/portage/make.conf
  echo "EMERGE_DEFAULT_OPTS=\"--jobs=2\"" >> /etc/portage/make.conf
  edone "make.conf defaults set" && echo  ""  

  einfo "Setting the locale"
  echo -e "${BOOTSTRAP_LOCALE_GEN}" >> /etc/locale.gen
  locale-gen
  eselect locale set "en_US.utf8" # this will fail if the locale isnt in /etc/locale.gen, test it!
  env-update && source /etc/profile
  edone "Locale set"  

  einfo "Syncing portage tree ..."
  emerge-webrsync || ewarn "emerge-webrsync failed (bad connection or server down?)"
  edone "Portage tree synced."
}


env_install() {
  einfo "Syncing portage tree ..."
  emerge-webrsync || ewarn "emerge-webrsync failed (bad connection or server down?)"
  edone "Portage tree synced."
  sleep 5 # TODO REMOVE
  
  
  # Needs be done here, otherwise python utils such as flaggie will fail to run because of UTF
  einfo "Setting the locale"
  echo -e "${BOOTSTRAP_LOCALE_GEN}" >> /etc/locale.gen
  locale-gen
  eselect locale set "en_US.utf8" # this will fail if the locale isnt in /etc/locale.gen, test it!
  env-update && source /etc/profile
  edone "Locale set"  
  
  einfo "Emerging baseline packages, resyncing the live tree"
  emerge app-portage/cpuinfo2cpuflags app-portage/flaggie app-portage/eix || eexit "Emerge failed"
  eix-sync || eexit "Failed syncing the portage tree. Connection down?"
  edone "Baseline packages emerged, live tree resynced."
  sleep 5 # TODO REMOVE
  
  einfo "Finalizing portage and make.conf configuration ..."
  mkdir -p /etc/portage/{package.mask,package.unmask,sets,repos.conf,package.accept_keywords,package.use,env,package}
  cpuinfo2cpuflags-x86 >> /etc/portage/make.conf
  echo "sys-kernel/dracut" >> /etc/portage/package.accept_keywords/mage-sys-core
  echo "sys-kernel/dracut device-mapper btrfs ssh-client systemd" >> /etc/portage/package.use/mage-sys-core 

  flaggie +systemd +vaapi +vdpau
  # If BOOTSTRAP_MAKECONF* parameters from /etc/mage/bootstrap.conf are set, set make.conf accordingly
  [[ ! -z ${BOOTSTRAP_MAKECONF_LINGUAS} ]] && echo "LINGUAS=\"${BOOTSTRAP_MAKECONF_LINGUAS}\"" >> /etc/portage/make.conf
  [[ ! -z ${BOOTSTRAP_MAKECONF_ACCEPT_LICENSE} ]] && echo "ACCEPT_LICENSE=\"${BOOTSTRAP_MAKECONF_ACCEPT_LICENSE}\"" >> /etc/portage/make.conf
  [[ ! -z ${BOOTSTRAP_MAKECONF_INPUT_DEVICES} ]] && echo "INPUT_DEVICES=\"${BOOTSTRAP_MAKECONF_INPUT_DEVICES}\"" >> /etc/portage/make.conf
  [[ ! -z ${BOOTSTRAP_MAKECONF_VIDEO_CARDS} ]] && echo "VIDEO_CARDS=\"${BOOTSTRAP_MAKECONF_VIDEO_CARDS}\"" >> /etc/portage/make.conf
  edone "Portage and make.conf configuration now set to good defaults"
  sleep 5 # TODO REMOVE
  
  einfo "Setting up systemd"
  emerge -uDN sys-apps/systemd || eexit "Emerge failed"
  firstboot localectl set-locale ${BOOTSTRAP_LOCALE_SET}
  firstboot timedatectl set-timezone ${BOOTSTRAP_TIMEZONE}
  edone "Systemd ready"  
  sleep 5 # TODO REMOVE
 
  einfo "Enabling bootstrap profiles"
  for PROFILE in ${BOOTSTRAP_PROFILES} ; do
  if [ `echo "${PROFILE}" | grep "system/"` ] ; then
      `echo "${SCRIPT} profile enable ${PROFILE}"` || eexit "Enabling profile ${PROFILE} failed"
    fi
    # TODO counter to see how many system profiles have been enabled
  done
  for PROFILE in ${BOOTSTRAP_PROFILES} ; do
  if [ `echo "${PROFILE}" | grep "hardware/"` ] ; then
      `echo "${SCRIPT} profile enable ${PROFILE}"` || eexit "Enabling profile ${PROFILE} failed"
    fi
    # TODO counter to see how many hardware profiles have been enabled
  done
  for PROFILE in ${BOOTSTRAP_PROFILES} ; do
  if [ `echo "${PROFILE}" | grep "app/"` ] ; then
      `echo "${SCRIPT} profile enable ${PROFILE}"` || eexit "Enabling profile ${PROFILE} failed"
    fi
  done
  edone "All profiles enabled"
  sleep 5 # TODO REMOVE
}



env_chroot
